# SUPER KEYWORD

class Person {
    String name;
    
    Person(String name){
        this.name=name;
    }
}
class Employee extends Person {
    Employee(String name){
        super(name);
    }
}

public class Main {
    public static void main(String[] args) {
       Employee e1 = new Employee("Jaga");
       System.out.println(e1.name);
    }
}

-------------------------------------------------------------------------------------------------
# ABSTRACT CLASS

abstract class Vehicle {
    abstract void Speed();
    
    void brand(){
        System.out.println("ABC Brand");
    }
}
class Bike extends Vehicle {
    void Speed(){
        System.out.println("110km/hr");
    }
    
}
class Car extends Vehicle {
    void Speed(){
        System.out.println("70km/hr");
    }
    
}


public class Main {
    public static void main(String[] args) {
       Car c1 = new Car();
       c1.Speed();
    }
}

--------------------------------------------------------------------------------------------------
#  STATIC KEYWORD

public class hello {
    static {
        System.out.println("Hey there!");
    }
    public static void main(String[] args){
        System.out.println("Hello");
        
        hello h1 = new hello();
        hello h2 = new hello();
    }
}

--------------------------------------------------------------------------------------------------
# STATIC KEYWORD

class Person {
    static int count = 0;
    int instanceNumber = 0;
    
   Person(){
       count = count+1;
       instanceNumber = instanceNumber+1;
   }
   void disp(){
       System.out.println("Instance Number :"+instanceNumber);
       System.out.println("Count :"+count);
}}

public class Main {
    public static void main(String[] args){
        Person p1 = new Person();
        p1.disp();
        Person p2 = new Person();
        p2.disp();
        Person p3 = new Person();
        p3.disp();
    }
}

------------------------------------------------------------------------------------------------------
# ABSTRACT CLASS

abstract class Person {
    String name;
    Person(String name){
        this.name = name;
    }
    
    abstract void makeSound();
}
class Dog extends Person {
    Dog(String name){
        super(name);
    }
    void makeSound(){
        System.out.println("Bow Bow!");
    }
}
class Cat extends Person {
    Cat(String name){
        super(name);
    }
    void makeSound(){
        System.out.println("Meow Meow!");
    }
}

public class Main {
    public static void main(String[] args){
       Dog d1 = new Dog("Chan");
       System.out.println(d1.name);
       d1.makeSound();
       
       Cat c1 = new Cat("Clauss");
       System.out.println(c1.name);
       c1.makeSound();
    }
}

------------------------------------------------------------------------------------------------------
